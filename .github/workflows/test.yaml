---
name: Test & lint API

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'
          architecture: 'x64'

      - name: Check poetry setup
        run: poetry run poetry check

      - name: Install dependencies
        run: poetry install

      - name: Lint
        run: poetry run flake8 .

      - name: Set up the testing environment variables that are close to prod
        run: ln -s .env.test .env

      # embed this into the CI itself but taken from:
      # https://raw.githubusercontent.com/wemake-services/wemake-django-template/master/%7B%7Bcookiecutter.project_name%7D%7D/docker/django/ci.sh
      - name: Check django settings
        run: poetry run ./manage.py check --deploy --fail-level WARNING
        env:
          DJANGO_ENV: production

      - name: Check django staticfiles app is working
        run: poetry run ./manage.py collectstatic --no-input --dry-run
        env:
          DJANGO_ENV: production
          DJANGO_COLLECTSTATIC_DRYRUN: 1

      - name: Check django migrations would work
        run: poetry run ./manage.py makemigrations --dry-run --check --verbosity 3

      - name: Checking dependencies are secure and without any known vulnerabilities
        run: poetry run safety check --full-report

      - name: Use the dev env vars for testing
        run: unlink .env && ln -s .env.test .env

      - name: Run tests
        run: poetry run ./manage.py test
